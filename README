<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tamilselvan J - Portfolio</title>
    <!-- Chosen Palette: Warm Neutrals (Background: #F5F5F5, Text: #333333, Accent: #4DB6AC) -->
    <!-- Application Structure Plan: A single-page, scrollable narrative. Starts with a Hero section for immediate impact, followed by a data-driven highlights chart, then dives into thematic sections (Skills, Projects, Education Timeline). This structure guides the user from a high-level summary to detailed information, enhancing usability and engagement over a simple document-like layout. -->
    <!-- Visualization & Content Choices: Education Scores -> Goal: Compare -> Viz: Chart.js Bar Chart -> Interaction: Hover tooltips -> Justification: More engaging than text, highlights performance visually. Skills -> Goal: Organize -> Viz: Tailwind CSS Grid -> Interaction: Hover effects -> Justification: Scannable and modular. Education History -> Goal: Show Progression -> Viz: HTML/CSS Timeline -> Justification: More intuitive for chronological data. All choices avoid SVG/Mermaid. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background-color: #F5F5F5;
            color: #333333;
            font-family: 'Inter', sans-serif;
        }
        .accent-color { color: #4DB6AC; }
        .accent-bg { background-color: #4DB6AC; }
        .accent-border { border-color: #4DB6AC; }
        .timeline-item::before {
            content: '';
            position: absolute;
            width: 1.25rem;
            height: 1.25rem;
            border-radius: 50%;
            left: -0.625rem;
            top: 0;
            background-color: #4DB6AC;
            border: 4px solid #F5F5F5;
        }
        .fade-in-section {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }
        .fade-in-section.is-visible {
            opacity: 1;
            transform: translateY(0);
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 350px;
            }
        }
    </style>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
</head>
<body class="antialiased">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8 max-w-5xl">

        <header class="text-center py-12 fade-in-section">
            <h1 class="text-4xl md:text-5xl font-bold">Tamilselvan J</h1>
            <p class="text-lg md:text-xl text-gray-600 mt-2">Electronics and Communication Engineering Student | IoT Enthusiast | Problem Solver</p>
            <div class="mt-6 flex justify-center items-center flex-wrap gap-4 text-sm">
                <a href="mailto:tamilj996@gmail.com" class="hover:text-teal-600 transition-colors duration-300">ðŸ“§ tamilj996@gmail.com</a>
                <span class="text-gray-300 hidden sm:inline">|</span>
                <a href="https://www.linkedin.com/in/tamilselvan-j1104/" target="_blank" class="hover:text-teal-600 transition-colors duration-300">ðŸ”— LinkedIn</a>
                <span class="text-gray-300 hidden sm:inline">|</span>
                <a href="https://github.com/Tamilselvan1104" target="_blank" class="hover:text-teal-600 transition-colors duration-300">ðŸ“‚ GitHub</a>
            </div>
        </header>

        <main class="space-y-16">

            <section class="fade-in-section">
                <div class="bg-white p-8 rounded-lg shadow-md">
                    <h2 class="text-2xl font-bold mb-4 text-center">About Me</h2>
                    <p class="text-center text-gray-700 max-w-3xl mx-auto leading-relaxed">I'm a passionate 4th-year Electronics and Communication Engineering student with a strong interest in IoT, programming, and tech innovation. I enjoy solving real-world problems and contributing to impactful, tech-driven solutions.</p>
                </div>
            </section>

            <section class="fade-in-section">
                <h2 class="text-2xl font-bold mb-6 text-center">Academic Performance</h2>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <p class="text-center text-gray-600 mb-4">A visual comparison of academic scores across key educational milestones. The chart below normalizes all scores to a percentage scale for clear comparison. Hover over the bars to see the exact scores.</p>
                    <div class="chart-container">
                        <canvas id="educationChart"></canvas>
                    </div>
                </div>
            </section>

            <section class="fade-in-section" id="skills-section">
                <h2 class="text-2xl font-bold mb-6 text-center">Technical Skills</h2>
                <div id="skills-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                </div>
            </section>

            <section class="fade-in-section" id="projects-section">
                <h2 class="text-2xl font-bold mb-6 text-center">Projects & Achievements</h2>
                <div id="projects-grid" class="grid grid-cols-1 md:grid-cols-2 gap-8">
                </div>
            </section>

            <section class="fade-in-section">
                <h2 class="text-2xl font-bold mb-8 text-center">Education Timeline</h2>
                <div class="relative border-l-2 accent-border ml-4 md:ml-0" id="education-timeline">
                </div>
            </section>

        </main>

        <footer class="text-center py-8 mt-12 text-gray-500 text-sm">
            <p>&copy; 2025 Tamilselvan J. All rights reserved.</p>
        </footer>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const portfolioData = {
                skills: {
                    "Languages": ["JAVA (Basics)", "C"],
                    "Tools": ["Arduino IDE", "Thingspeak", "Tinkercad"],
                    "Networking": ["Cisco Packet Tracer", "NS2", "Network Protocols"],
                    "IoT": ["Sensor integration", "Data visualization", "Real-time acquisition"]
                },
                projects: [
                    {
                        title: "Low-Cost IoT-Based Weather Monitoring System",
                        description: "Developed a real-time weather monitoring system using Thingspeak and integrated sensors for temperature, humidity, and pressure. Designed a web-based dashboard for remote weather tracking, especially useful for rural areas."
                    },
                    {
                        title: "Autonomous Line Follower Robot",
                        description: "Designed and built an autonomous robot that follows a predefined path using infrared sensors and adaptive navigation logic. This project secured the 2nd prize in a robotics design challenge at Takshashila University."
                    }
                ],
                leadership: [
                    "Led multiple IoT-based academic projects and hackathons.",
                    "Organized and managed technical events and workshops at DRESTEIN (Annual Symposium).",
                    "Collaborated with peers to design innovative solutions in automation and embedded systems."
                ],
                education: [
                    {
                        level: "B.E. in Electronics & Communication",
                        institution: "Saveetha Engineering College",
                        period: "2022 - Present",
                        details: "Current CGPA: 7.84 / 10.0"
                    },
                    {
                        level: "Higher Secondary Certificate (HSC)",
                        institution: "SVM Matric Hr. Sec. School",
                        period: "2021 - 2022",
                        details: "Scored 79.6%"
                    },
                    {
                        level: "Secondary School Leaving Certificate (SSLC)",
                        institution: "SVM Matric Hr. Sec. School",
                        period: "2019 - 2020",
                        details: "Scored 94.6%"
                    }
                ],
                educationScores: {
                    labels: ["SSLC (Class 10)", "HSC (Class 12)", "B.E. ECE (Current)"],
                    scores: [94.6, 79.6, 78.4]
                }
            };

            const skillsGrid = document.getElementById('skills-grid');
            for (const [category, skills] of Object.entries(portfolioData.skills)) {
                const skillCard = document.createElement('div');
                skillCard.className = 'bg-white p-6 rounded-lg shadow-md hover:shadow-xl hover:-translate-y-1 transition-all duration-300';
                let skillsHtml = skills.map(skill => `<li class="text-gray-700">${skill}</li>`).join('');
                skillCard.innerHTML = `
                    <h3 class="text-lg font-bold mb-3 accent-color">${category}</h3>
                    <ul class="space-y-2 list-disc list-inside">${skillsHtml}</ul>
                `;
                skillsGrid.appendChild(skillCard);
            }

            const projectsGrid = document.getElementById('projects-grid');
            portfolioData.projects.forEach(project => {
                const projectCard = document.createElement('div');
                projectCard.className = 'bg-white p-8 rounded-lg shadow-md';
                projectCard.innerHTML = `
                    <h3 class="text-xl font-bold mb-3">${project.title}</h3>
                    <p class="text-gray-700 leading-relaxed">${project.description}</p>
                `;
                projectsGrid.appendChild(projectCard);
            });

            const educationTimeline = document.getElementById('education-timeline');
            portfolioData.education.forEach(edu => {
                const timelineItem = document.createElement('div');
                timelineItem.className = 'mb-8 ml-8 timeline-item';
                timelineItem.innerHTML = `
                    <h3 class="text-lg font-bold">${edu.level}</h3>
                    <p class="font-semibold text-gray-600">${edu.institution}</p>
                    <time class="text-sm text-gray-500">${edu.period}</time>
                    <p class="mt-2 text-gray-700">${edu.details}</p>
                `;
                educationTimeline.appendChild(timelineItem);
            });

            const ctx = document.getElementById('educationChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: portfolioData.educationScores.labels,
                    datasets: [{
                        label: 'Score (%)',
                        data: portfolioData.educationScores.scores,
                        backgroundColor: [
                            'rgba(77, 182, 172, 0.6)',
                            'rgba(77, 182, 172, 0.6)',
                            'rgba(77, 182, 172, 0.6)'
                        ],
                        borderColor: [
                            'rgba(77, 182, 172, 1)',
                            'rgba(77, 182, 172, 1)',
                            'rgba(77, 182, 172, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: {
                                callback: function(value) {
                                    return value + "%"
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += context.parsed.y + '%';
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });

            const faders = document.querySelectorAll('.fade-in-section');
            const appearOptions = {
                threshold: 0.1,
                rootMargin: "0px 0px -50px 0px"
            };
            const appearOnScroll = new IntersectionObserver(function(entries, appearOnScroll) {
                entries.forEach(entry => {
                    if (!entry.isIntersecting) {
                        return;
                    } else {
                        entry.target.classList.add('is-visible');
                        appearOnScroll.unobserve(entry.target);
                    }
                });
            }, appearOptions);

            faders.forEach(fader => {
                appearOnScroll.observe(fader);
            });
        });
    </script>
</body>
</html>
